/*
 * DamNums: by Xaser Acheron
 */

class DamNum : Actor
{
	int font; // [TODO] implement via enum
	int digitCount;
	int digitPlace;
	uint8 digitValue;
	name damageType;
	
	const fadeAmt = 0.05;
	
	Default
	{
		RenderStyle 'Add';
		Alpha 1.0;
		Gravity 0.4;
		Scale 0.75;

		-SOLID;
		+NOBLOCKMAP;
		+NOBLOCKMONST;
		+THRUACTORS;
	}
	States
	{
	Spawn:
		#### # 10 Bright;
		#### # 1 Bright A_FadeOut(fadeAmt, 1);
		Wait;
	}
	
	/*
	 * DamNum setup function. Sets the correct sprite based
	 * on the digit and the place/number-length. This is necessary
	 * to offset it correctly relative to the viewer.
	 */
	override void PostBeginPlay()
	{
		// Determine which font to use.
		DamNum this = DamNum(self);
		int digitCount = (this.digitCount == 0) ? 1 : this.digitCount;
		int digitPlace = (this.digitPlace == 0) ? 1 : this.digitPlace;

		// [TODO] add more fonts. Just assume the only one we have so far.
		string fontSprite = "ND" .. digitCount .. digitPlace;
		self.sprite = GetSpriteIndex(fontSprite);
		
		// set the frame to the desired digit; since frames A-J (which is 0-9
		// in integer-speak) correspond exactly to the digits 0-9, we're good. Whoop!
		self.frame = DamNum(self).digitValue;
	}

	/*
	 * Create (spawn) damage numbers for a particular amount of damage/type.
	 */
	static int create(Actor target, Actor inflictor, int damage, Name damagetype) {
		
		// pre-calculate some things so we can apply 'em to all spawned nums.
		float ang = frandom(0, 360);
		vector3 nvel = (1.0 * cos(ang), 1.0 * sin(ang), frandom(3.0, 4.0));
		vector3 npos;
		
		// set the position to the inflictor if we've got one.
		if(inflictor) {
			npos = inflictor.pos;
		} else {
			npos = target.pos + (0, 0, target.height-16); // fallback default
		}
		
		// spawn in the damage number digits.
		int dam = damage;
		int place = 1;
		int length = log10(damage) + 1;
		while(dam > 0) {
			let damnum = DamNum(Spawn("DamNum", npos, ALLOW_REPLACE));
			
			// init the digits... diginit?
			if(damnum) {
				damnum.vel = nvel;
				damnum.angle = ang;
				damnum.digitCount = length;
				damnum.digitPlace = place;
				damnum.digitValue = dam % 10;
				damnum.damageType = damagetype;
			}
			
			// well dam.
			dam /= 10;
			place++;
		}
		
		// return the damage, for easy chaining.
		return damage;
	}
}
